#Problem 2 from Project Euler
#Solution by Paul Barton
#
#Here is the text of the problem:
#Each new term in the Fibonacci sequence is generated by adding the previous two
#terms. By starting with 1 and 2, the first 10 terms will be:
#
#1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
#
#By considering the terms in the Fibonacci sequence whose values do not exceed
#four million, find the sum of the even-valued terms.
#
#There are several ways to simplify the approach to this problem and reduce
#the number of calculations. For now, I will leave them alone and only present
#a basic fibonacci algorithm.

import time
MAX = 4000000

a = 1
b = 2
count = 2

t = time.time()
while b < MAX:
    a, b = b, a + b
    if (b % 2) == 0:
        if b < 4000000:
            count = count + b

print("the total is {0}".format(count))
print(time.time() - t)